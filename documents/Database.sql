-- MySQL Script generated by MySQL Workbench
-- Thu Dec  3 19:46:17 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema surfrider
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema surfrider
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `surfrider` DEFAULT CHARACTER SET utf8 ;
USE `surfrider` ;

-- -----------------------------------------------------
-- Table `surfrider`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(30) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `password` TEXT NOT NULL,
  `firstname` VARCHAR(45) NULL,
  `lastname` VARCHAR(45) NULL,
  `avatar` TEXT NULL,
  `bio` VARCHAR(300) NULL,
  `country` VARCHAR(45) NULL,
  `status` TINYINT(1) NULL DEFAULT 0,
  `created_at` INT NULL DEFAULT 0,
  `created_ip` VARCHAR(45) NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`session` (
  `id` INT NOT NULL,
  `user_id` INT NULL,
  `spot_id` INT NOT NULL,
  `street` TEXT NULL,
  `long` DOUBLE NULL DEFAULT 0,
  `lat` DOUBLE NULL DEFAULT 0,
  `status` TINYINT(1) NULL DEFAULT 0,
  `created_at` INT NULL DEFAULT 0,
  `updated_at` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_post_author1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_post_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `surfrider`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`entity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`entity` (
  `id` INT NOT NULL,
  `title` VARCHAR(180) NOT NULL,
  `image` TEXT NULL,
  `description` TEXT NULL,
  `status` TINYINT(1) NULL DEFAULT 0,
  `type` INT NULL DEFAULT 0,
  `created_at` INT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`frequency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`frequency` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `boat_id` INT NULL,
  `bathers` INT NULL DEFAULT 0,
  `nautical` INT NULL DEFAULT 0,
  `boats` INT NULL,
  `created_at` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_frequency_entity1_idx` (`boat_id` ASC) VISIBLE,
  CONSTRAINT `fk_frequency_entity`
    FOREIGN KEY (`boat_id`)
    REFERENCES `surfrider`.`entity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`sessionfrequancy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`sessionfrequancy` (
  `session_id` INT NOT NULL,
  `frequency_id` INT NOT NULL,
  `created_at` INT NULL DEFAULT 0,
  PRIMARY KEY (`session_id`, `frequency_id`),
  INDEX `fk_session_has_frequency_frequency1_idx` (`frequency_id` ASC) VISIBLE,
  INDEX `fk_session_has_frequency_session1_idx` (`session_id` ASC) VISIBLE,
  CONSTRAINT `fk_session_has_frequency_session`
    FOREIGN KEY (`session_id`)
    REFERENCES `surfrider`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_has_frequency_frequency`
    FOREIGN KEY (`frequency_id`)
    REFERENCES `surfrider`.`frequency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`auth`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`auth` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `token` TEXT NOT NULL,
  `created_at` INT NULL,
  `expired_at` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_auth_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_auth_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `surfrider`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`useditem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`useditem` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `token` TEXT NOT NULL,
  `created_at` INT NULL,
  `entity_id` INT NULL,
  `title` VARCHAR(60) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_useditem_entity1_idx` (`entity_id` ASC) VISIBLE,
  CONSTRAINT `fk_useditem_entity`
    FOREIGN KEY (`entity_id`)
    REFERENCES `surfrider`.`entity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `surfrider`.`sessionuseditem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `surfrider`.`sessionuseditem` (
  `session_id` INT NOT NULL,
  `useditem_id` INT NOT NULL,
  `created_at` INT NULL DEFAULT 0,
  PRIMARY KEY (`session_id`, `useditem_id`),
  INDEX `fk_session_has_useditem_useditem1_idx` (`useditem_id` ASC) VISIBLE,
  INDEX `fk_session_has_useditem_session1_idx` (`session_id` ASC) VISIBLE,
  CONSTRAINT `fk_session_has_useditem_session`
    FOREIGN KEY (`session_id`)
    REFERENCES `surfrider`.`session` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_session_has_useditem_useditem`
    FOREIGN KEY (`useditem_id`)
    REFERENCES `surfrider`.`useditem` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
